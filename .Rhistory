data1=data[,1:10]
View(data1)
summary(data1)
summary(data1)
model = train( ~. Observed.yield..mg.g.,data1 = training, method = "glm")
model = train( Observed.yield..mg.g. ~.,data1 = training, method = "glm")
model = train( Observed.yield..mg.g. ~.,data = data1, method = "glm")
prediction = predict(model,newdata = data1)
prediction
data$Predicted.yield.with_glm = prediction
View(data)
data=data[1:11]
data1=data[,1:10]
set.seed(3)
model = train( Observed.yield..mg.g. ~.,data = data1, method = "glm")
prediction = predict(model,newdata = data1)
prediction
data$Predicted.yield.with_glm = prediction
View(data)
model1 = train( Observed.yield..mg.g. ~.,data = data1, method = "gbm")
library("caret", lib.loc="~/R/win-library/3.5")
library("xlsx", lib.loc="~/R/win-library/3.5")
model1 = train( Observed.yield..mg.g. ~.,data = data1, method = "gbm")
library("gbm", lib.loc="~/R/win-library/3.5")
model1 = train( Observed.yield..mg.g. ~.,data = data1, method = "gbm")
prediction1 = predict(model,newdata = data1)
prediction1
data$Predicted.yield.with_gbm = prediction1
View(data)
prediction1
set.seed(3)
model = train( Observed.yield..mg.g. ~.,data = data1, method = "glm")
prediction = predict(model,newdata = data1)
prediction
model1 = train( Observed.yield..mg.g. ~.,data = data1, method = "gbm")
prediction1 = predict(model,newdata = data1)
prediction1
data$Predicted.yield.with_gbm = prediction1
model1 = train( Observed.yield..mg.g. ~.,data = data1, method = "lda")
?train
data=data[1:11]
data1=data[,1:10]
set.seed(3)
model = train( Observed.yield..mg.g. ~.,data = data1, method = "glm")
prediction = predict(model,newdata = data1)
prediction
data$Predicted.yield.with_glm = prediction
View(data)
install.packages("earth")
library("earth", lib.loc="~/R/win-library/3.5")
model1 = train( Observed.yield..mg.g. ~.,data = data1, method = "bagEarth")
prediction1 = predict(model,newdata = data1)
prediction1
data$Predicted.yield.with_bagearth = prediction1
View(data)
model1 = train( Observed.yield..mg.g. ~.,data = data1, method = "bagEarth")
prediction1 = predict(model1,newdata = data1)
prediction1
data$Predicted.yield.with_bagearth = prediction1
library("gbm", lib.loc="~/R/win-library/3.5")
model2 = train( Observed.yield..mg.g. ~.,data = data1, method = "gbm")
prediction2 = predict(model2,newdata = data1)
prediction2
prediction2 = predict(model2,newdata = data1)
model2 = train( Observed.yield..mg.g. ~.,data = data1, method = "gbm")
model2 = train( Observed.yield..mg.g. ~.,data = data1, method = "bag")
prediction2 = predict(model2,newdata = data1)
model2 = train( Observed.yield..mg.g. ~.,data = data1, method = "bag")
prediction2 = predict(model2,newdata = data1)
model2 = train( Observed.yield..mg.g. ~.,data = data1, method = "glm")
model2 = train( Observed.yield..mg.g. ~.,data = data1, method = "bag")
model2 = train( Observed.yield..mg.g. ~.,data = data1, method = "brnn")
library("brnn", lib.loc="~/R/win-library/3.5")
model2 = train( Observed.yield..mg.g. ~.,data = data1, method = "brnn")
prediction2 = predict(model2,newdata = data1)
prediction2
data$Predicted.yield.with_baynesian_neural_network = prediction1
data$Predicted.yield.with_baynesian_neural_network = prediction2
library("brnn", lib.loc="~/R/win-library/3.5")
View(data)
View(data1)
View(data1)
actual = data1[,10]
RMSE1 = sqrt(mean((predicted-actual)**2))
RMSE = sqrt(mean((predicted-actual)**2))
RMSE = sqrt(mean((prediction-actual)**2))
RMSE1 = sqrt(mean((prediction1-actual)**2))
RMSE2 = sqrt(mean((prediction2-actual)**2))
View(data)
View(data)
actual = data[,10]
pyield = data[,11]
RMSE = sqrt(mean((prediction-actual)**2))
RMSE1 = sqrt(mean((prediction1-actual)**2))
RMSE2 = sqrt(mean((prediction2-actual)**2))
RMSE3 = sqrt(mean((pyield-actual)**2))
View(data)
plot(prediction2,actual)
?write.xlsx
write.xlsx(data,"predicted_values.xlsx")
data2=read.xlsx("carbohydratepolymers.xlsx",sheetName = "Sheet1",endRow = 24)
View(data2)
rm(data2)
View(data1)
data2=data1
data2=data[,1:11]
View(data2)
set.seed(2)
training = data2[intrain,]
intrain = createDataPartition(y = data2$Observed.yield..mg.g.,p=.7,list = F)
training = data2[intrain,]
testing = data2[-intrain,]
testing = data2[-intrain,]
View(training)
View(testing)
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "brnn")
prediction_new = predict(model_new, newdata = training)
View(data2)
View(data1)
training = data1[intrain,]
testing = data1[-intrain,]
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "brnn")
prediction_new = predict(model_new, newdata = training)
prediction_new
prediction_new = predict(model_new, newdata = testing)
prediction_new
View(training)
View(testing)
plot(testing$Observed.yield..mg.g.,prediction_new)
abline(testing$Observed.yield..mg.g.~prediction_new)
plot(testing$Observed.yield..mg.g.,prediction_new)
abline(testing$Observed.yield..mg.g.~prediction_new)
abline(testing$Observed.yield..mg.g. ~ prediction_new)
prediction_new
View(data2)
data2[-intrain,]
p = data2[-intrain,]
View(p)
p$predict = prediction_new
View(p)
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
library("caret", lib.loc="~/R/win-library/3.5")
library("xlsx", lib.loc="~/R/win-library/3.5")
library("brnn", lib.loc="~/R/win-library/3.5")
data=read.xlsx("carbohydratepolymers.xlsx",sheetName = "Sheet1",endRow = 24)
data=data[1:11]
View(data)
data1=data[,1:10]
View(data1)
data1=data[,2:10]
set.seed(3)
model = train( Observed.yield..mg.g. ~.,data = data1, method = "glm")
prediction = predict(model,newdata = data1)
prediction
data$Predicted.yield.with_glm = prediction
model1 = train( Observed.yield..mg.g. ~.,data = data1, method = "bagEarth")
prediction1 = predict(model1,newdata = data1)
prediction1
data$Predicted.yield.with_bagearth = prediction1
model2 = train( Observed.yield..mg.g. ~.,data = data1, method = "brnn")
prediction2 = predict(model2,newdata = data1)
prediction2
data$Predicted.yield.with_baynesian_neural_network = prediction2
actual = data[,10]
pyield = data[,11]
RMSE = sqrt(mean((prediction-actual)**2))
RMSE1 = sqrt(mean((prediction1-actual)**2))
RMSE2 = sqrt(mean((prediction2-actual)**2))
RMSE3 = sqrt(mean((pyield-actual)**2))
RMSE = sqrt(mean((prediction-actual)**2))
RMSE1 = sqrt(mean((prediction1-actual)**2))
RMSE2 = sqrt(mean((prediction2-actual)**2))
RMSE = sqrt(mean((prediction-actual)**2))
RMSE1 = sqrt(mean((prediction1-actual)**2))
RMSE2 = sqrt(mean((prediction2-actual)**2))
data2=data[,1:11]
View(data2)
data2=data[,2:11]
set.seed(2)
intrain = createDataPartition(y = data2$Observed.yield..mg.g.,p=.7,list = F)
training = data1[intrain,]
testing = data1[-intrain,]
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "brnn")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
data2=data[,2:11]
set.seed(2)
intrain = createDataPartition(y = data2$Observed.yield..mg.g.,p=.7,list = F)
training = data1[intrain,]
testing = data1[-intrain,]
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "brnn")
prediction_new = predict(model_new, newdata = testing)
prediction_new
View(testing)
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
View(p)
intrain = createDataPartition(y = data2$Observed.yield..mg.g.,p=.7,list = F)
training = data1[intrain,]
testing = data1[-intrain,]
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "glm")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
data2=data[,2:11]
set.seed(2)
intrain = createDataPartition(y = data2$Observed.yield..mg.g.,p=.7,list = F)
training = data1[intrain,]
testing = data1[-intrain,]
View(training)
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "brnn")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "lgm")
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "glm")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
set.seed(4)
intrain = createDataPartition(y = data2$Observed.yield..mg.g.,p=.7,list = F)
training = data1[intrain,]
testing = data1[-intrain,]
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "glm")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
set.seed(5)
intrain = createDataPartition(y = data2$Observed.yield..mg.g.,p=.7,list = F)
training = data1[intrain,]
testing = data1[-intrain,]
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "glm")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
set.seed(8)
intrain = createDataPartition(y = data2$Observed.yield..mg.g.,p=.7,list = F)
training = data1[intrain,]
testing = data1[-intrain,]
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "glm")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
set.seed(9)
intrain = createDataPartition(y = data2$Observed.yield..mg.g.,p=.7,list = F)
training = data1[intrain,]
testing = data1[-intrain,]
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "glm")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
data2=data[,1:11]
set.seed(9)
intrain = createDataPartition(y = data2$Observed.yield..mg.g.,p=.7,list = F)
training = data1[intrain,]
testing = data1[-intrain,]
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "glm")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
set.seed(2)
intrain = createDataPartition(y = data2$Observed.yield..mg.g.,p=.7,list = F)
training = data1[intrain,]
testing = data1[-intrain,]
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "brnn")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
library(caret)
library(xlsx)
library(bagEarth)
library(brnn)
set.seed(3)
model = train( Observed.yield..mg.g. ~.,data = data1, method = "glm")
prediction = predict(model,newdata = data1)
prediction
data$Predicted.yield.with_glm = prediction
model1 = train( Observed.yield..mg.g. ~.,data = data1, method = "bagEarth")
prediction1 = predict(model1,newdata = data1)
prediction1
data$Predicted.yield.with_bagearth = prediction1
model2 = train( Observed.yield..mg.g. ~.,data = data1, method = "brnn")
prediction2 = predict(model2,newdata = data1)
prediction2
data$Predicted.yield.with_baynesian_neural_network = prediction2
actual = data[,10]
pyield = data[,11]
RMSE = sqrt(mean((prediction-actual)**2))
RMSE1 = sqrt(mean((prediction1-actual)**2))
RMSE2 = sqrt(mean((prediction2-actual)**2))
RMSE3 = sqrt(mean((pyield-actual)**2))
plot(prediction2,actual)
write.xlsx(data,"predicted_values.xlsx")
data2=data[,1:11]
set.seed(2)
intrain = createDataPartition(y = data2$Observed.yield..mg.g.,p=.7,list = F)
training = data1[intrain,]
testing = data1[-intrain,]
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "brnn")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
data2=data[,2:11]
set.seed(2)
intrain = createDataPartition(y = data2$Observed.yield..mg.g.,p=.7,list = F)
training = data1[intrain,]
testing = data1[-intrain,]
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "brnn")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "glm")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "gbm")
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "brnn")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
set.seed(10)
intrain = createDataPartition(y = data2$Observed.yield..mg.g.,p=.7,list = F)
training = data1[intrain,]
testing = data1[-intrain,]
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "brnn")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
View(p)
data2=data[,2:11]
set.seed(10)
intrain = createDataPartition(y = data2$Observed.yield..mg.g.,p=.7,list = F)
training = data1[intrain,]
testing = data1[-intrain,]
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "brnn")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
set.seed(9)
intrain = createDataPartition(y = data2$Observed.yield..mg.g.,p=.7,list = F)
training = data1[intrain,]
testing = data1[-intrain,]
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "brnn")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
set.seed(8)
intrain = createDataPartition(y = data2$Observed.yield..mg.g.,p=.7,list = F)
training = data1[intrain,]
testing = data1[-intrain,]
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "brnn")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
set.seed(10)
intrain = createDataPartition(y = data2$Observed.yield..mg.g.,p=.7,list = F)
training = data1[intrain,]
testing = data1[-intrain,]
model_new = train(Observed.yield..mg.g. ~.,data = training, method = "brnn")
prediction_new = predict(model_new, newdata = testing)
prediction_new
plot(testing$Observed.yield..mg.g.,prediction_new)
p = data2[-intrain,]
p$predict = prediction_new
RMSE_new = sqrt(mean((p$predict-p$Observed.yield..mg.g.)**2))
RMSE_new1 = sqrt(mean((p$Predicted.yield..mg.g.-p$Observed.yield..mg.g.)**2))
library("caret", lib.loc="~/R/win-library/3.5")
library("xlsx", lib.loc="~/R/win-library/3.5")
data3=read.xlsx("table2.xlsx", sheetName = "Sheet1")
data3=read.xlsx("table2.xlsx", sheetName = Sheet1)
data3=read.xlsx("table2.xlsx", sheetName = Sheet1)
data3=read.xlsx("table2.xlsx", sheetName = "Sheet1")
data3=read.xlsx("table2.xlsx", sheetName = "sheet1")
data3=read.xlsx("table2.xlsx", sheetName = "Sheet1")
data3=read.xlsx("table2.xlsx", sheetName = "Sheet1")
View(data2)
View(data3)
actual_data=data3[,2:7]
View(actual_data)
View(data3)
actual_data=data3[,2:6]
View(actual_data)
actual_data
intrain2 = createDataPartition(y = actual_data3$Observed_yield..mg.g. ~.,p=.7,list = F)
intrain2 = createDataPartition(y = actual_data3$Observed_yield..mg.g. ~.,p=.7,list = F)
intrain2 = createDataPartition(y = actual_data$Observed_yield..mg.g. ~.,p=.7,list = F)
intrain2 = createDataPartition(y = actual_data$Observed_yield..mg.g. ~.,p=.7,list = F)
intrain2 = createDataPartition(y = actual_data$Observed_yield..mg.g.~.,p=.7,list = F)
intrain2 = createDataPartition(y = actual_data$Observed_yield..mg.g.~. ,p=.7,list = F)
actual_data$Observed_yield..mg.g.~.
actual_data$Observed_yield..mg.g.
intrain2 = createDataPartition(y = actual_data$Observed_yield..mg.g. ~. ,p=.7,list = F)
intrain2 = createDataPartition(y = actual_data$Observed_yield..mg.g. ~. ,p=.7,list = F)
intrain2 = createDataPartition(y = actual_data$M ~. ,p=.7,list = F)
intrain2 = createDataPartition(y = actual_data$Observed_yield..mg.g.,p=.7,list = F)
training2 = data3[intrain2,]
testing2 = data3[-intrain2,]
model3 = train(Observed.yield..mg.g. ~.,data = training2, method = "brnn")
model3 = train(Observed_yield..mg.g. ~.,data = training2, method = "brnn")
prediction_1 = predict(model3, newdata = testing2)
prediction_1
data3$predict = prediction_1
View(data3)
data3$predict = prediction_1
data3$predict = prediction_1
prediction_1
testing2$predict = prediction_1
View(testing2)
RMSE_1 = sqrt(mean((testing2$predict-testing2$Observed.yield..mg.g.)**2))
RMSE_2 = sqrt(mean((testing2$Predicted.yield..mg.g.-testing2$Observed.yield..mg.g.)**2))
RMSE_1 = sqrt(mean((testing2$predict-testing2$Observed_yield..mg.g.)**2))
RMSE_2 = sqrt(mean((testing2$Predicted.yield..mg.g.-testing2$Observed.yield..mg.g.)**2))
RMSE_2 = sqrt(mean((testing2$Predicted_yield..mg.g.-testing2$Observed_yield..mg.g.)**2))
set.seed(3)
model3 = train(Observed_yield..mg.g. ~.,data = training2, method = "glm")
prediction_1 = predict(model3, newdata = testing2)
prediction_1
actual_data$Observed_yield..mg.g.
testing2$predict = prediction_1
RMSE_1 = sqrt(mean((testing2$predict-testing2$Observed_yield..mg.g.)**2))
RMSE_2 = sqrt(mean((testing2$Predicted_yield..mg.g.-testing2$Observed_yield..mg.g.)**2))
intrain2 = createDataPartition(y = actual_data$Observed_yield..mg.g.,p=.7,list = F)
training2 = data3[intrain2,]
set.seed(3)
intrain2 = createDataPartition(y = actual_data$Observed_yield..mg.g.,p=.7,list = F)
training2 = data3[intrain2,]
testing2 = data3[-intrain2,]
model3 = train(Observed_yield..mg.g. ~.,data = training2, method = "brnn")
prediction_1 = predict(model3, newdata = testing2)
prediction_1
actual_data$Observed_yield..mg.g.
testing2$predict = prediction_1
RMSE_1 = sqrt(mean((testing2$predict-testing2$Observed_yield..mg.g.)**2))
RMSE_2 = sqrt(mean((testing2$Predicted_yield..mg.g.-testing2$Observed_yield..mg.g.)**2))
